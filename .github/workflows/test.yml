---
name: Run tests
on:
  push: ~
  pull_request: ~

jobs:
  test:
    name: "Test Ansible ${{ matrix.ansible }} on ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-18.04
          - ubuntu-20.04
        ansible:
          - '2.3'
          - '2.8'
          - '2.9'
          - '2.10'
        python:
          - '3.6'
          - '3.8'
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Install dependencies
        run: |
          sudo apt-get update && sudo apt-get install acl # Fix issues with: Failed to set permissions on the temporary files...
          python -m pip install --upgrade pip
          pip install ansible~=${{ matrix.ansible }}
      - name: Setup Ansible Roles
        run: "{ echo '[defaults]'; echo 'roles_path = ../'; } >> ansible.cfg"
      - name: Syntax Check
        run: ansible-playbook -i localhost, tests/test.yml --syntax-check
      - name: Run test
        run: ansible-playbook -i localhost, --connection=local -b tests/test.yml
      - name: Check idempotency
        run: >
          ansible-playbook -i localhost, --connection=local -b tests/test.yml
          | tee >( cat >&2 ) # Clone stdout to stderr to have it available
          | grep -q 'changed=0.*failed=0'
          && (echo 'Idempotence test: pass' && exit 0)
          || (echo 'Idempotence test: fail' && exit 1)
      # Lets check on the state of the users. I would invoke severspec myself however
      # its a big thing to bring in on a small pull.
      - run: id ansibletestuser  | grep --silent "uid=2222(ansibletestuser) gid=2222(ansibletestuser) groups=2222(ansibletestuser),2(bin),100(users)"
      - run: id ansibletestuser2 | grep --silent "uid=2223(ansibletestuser2) gid=2223(ansibletestuser2) groups=2223(ansibletestuser2),2(bin),100(users)"
      - run: id ansibletestuser3 | grep --silent "uid=2224(ansibletestuser3) gid=4001(ansibletestgroup1) groups=4001(ansibletestgroup1),2(bin),100(users)"
      - run: id ansibletestuser4 | grep --silent "uid=2225(ansibletestuser4) gid=100(users) groups=100(users),2(bin)"
      - run: id ansibletestuser5 | grep --silent "uid=2226(ansibletestuser5) gid=4000(ansibletestgroup) groups=4000(ansibletestgroup),2(bin),100(users)"
      - run: test "$(id ansibletestuser6 | sed 's/^uid=\([0-9]\+\).*/\1/')" -lt 1000
      - run: grep --silent "^ansibletestgroup:"  /etc/group
      - run: grep --silent "^ansibletestgroup1:" /etc/group
      - run: ls -lgd /home/ansibletestuser  | awk '{exit $3!="ansibletestuser"}'
      - run: ls -lgd /home/otherdirectory   | awk '{exit $3!="ansibletestuser2"}'
      - run: ls -lgd /home/ansibletestuser3 | awk '{exit $3!="ansibletestgroup1"}'
      - run: ls -lgd /home/otherdirectory1  | awk '{exit $3!="users"}'
      - run: ls -lgd /home/ansibletestuser5 | awk '{exit $3!="ansibletestgroup"}'
      - run: ls -lg /home/ansibletestuser/.profile   | awk '{exit $3!="ansibletestuser"}'
      - run: ls -lg /home/otherdirectory/.profile    | awk '{exit $3!="ansibletestuser2"}'
      - run: ls -lg /home/ansibletestuser3/.profile  | awk '{exit $3!="ansibletestgroup1"}'
      - run: ls -lg /home/otherdirectory1/.profile   | awk '{exit $3!="users"}'
      - run: ls -lgd /home/ansibletestuser5/.profile | awk '{exit $3!="ansibletestgroup"}'
  release:
    needs: test
    if: success() && github.event_name == 'push' && github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: galaxy
        uses: robertdebock/galaxy-action@1.1.0
        with:
          galaxy_api_key: ${{ secrets.galaxy_api_key }}
